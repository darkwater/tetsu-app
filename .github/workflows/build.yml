name: Build
on:
  - push
  - workflow_dispatch

env:
  FLUTTER_VERSION: "3.24.5"
  BRANCH: ${{ github.ref }}
  COMMIT_HASH: ${{ github.sha }}
  COMMIT_MESSAGE: ${{ github.event.head_commit.message }}

jobs:
  build-android:
    name: Build Android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"

      - name: Setup Android signing
        env:
          KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          STORE_PASSWORD: ${{ secrets.ANDROID_STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          # create variables
          KEYSTORE_PATH=$RUNNER_TEMP/keystore.jks

          # import keystore from secrets
          echo -n "$KEYSTORE_BASE64" | base64 -d > $KEYSTORE_PATH

          # create key.properties
          echo "storePassword=$STORE_PASSWORD" > android/key.properties
          echo "keyPassword=$KEY_PASSWORD" >> android/key.properties
          echo "keyAlias=key0" >> android/key.properties
          echo "storeFile=$KEYSTORE_PATH" >> android/key.properties

      - name: Fetch dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tetsu-app.apk
          path: build/app/outputs/flutter-apk/app-release.apk

  build-windows:
    name: Build Windows
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"

      - run: flutter config --enable-windows-desktop

      - name: Fetch dependencies
        run: flutter pub get

      - name: Build app
        run: flutter build windows

      - name: Archive app
        run: |
          choco install -y zip curl

          cd build/windows/x64/runner/Release
          zip -r tetsu-app-win-x64.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tetsu-app-win-x64.zip
          path: build/windows/x64/runner/Release/tetsu-app-win-x64.zip

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"

      - name: Install build dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev

      - run: flutter config --enable-linux-desktop

      - name: Fetch dependencies
        run: flutter pub get

      - name: Build app
        run: flutter build linux

      - name: Archive app
        run: |
          cd build/linux/x64/release/bundle
          zip -r tetsu-app-linux-x64.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tetsu-app-linux-x64.zip
          path: build/linux/x64/release/bundle/tetsu-app-linux-x64.zip

  build-ios:
    name: Build iOS
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Fetch dependencies
        run: flutter pub get

      - name: Build Flutter app
        run: flutter build ios

      - name: Build iOS app
        run: |
          xcodebuild \
            -workspace $PWD/ios/Runner.xcworkspace \
            -scheme Runner \
            -sdk iphoneos \
            -configuration Release \
            archive \
            -archivePath $PWD/build/ios/iphoneos/Runner.xcarchive

      - name: Export IPA
        run: |
          xcodebuild -exportArchive \
            -archivePath $PWD/build/ios/iphoneos/Runner.xcarchive \
            -exportOptionsPlist $PWD/ios/exportOptions.plist \
            -exportPath $PWD/build/ios/iphoneos/Runner.ipa

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tetsu-app.ipa
          path: build/ios/iphoneos/Runner.ipa/tetsu_app.ipa

      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision
